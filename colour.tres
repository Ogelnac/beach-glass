[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://cadbpjonv1hak"]

[sub_resource type="Shader" id="Shader_qljma"]
code = "shader_type spatial;
render_mode unshaded, cull_disabled;

uniform sampler2D albedo: source_color, filter_nearest;
uniform vec2 ratio_adjustment = vec2(1.0, 1.0);
uniform vec3 colour: source_color = vec3(1.0, 1.0, 1.0);
uniform bool use_colour = false;
uniform float mix_amount = 0.5;

uniform float scale_offset = 0.2;

void vertex() {
	float rounded_x = round(VERTEX.x / scale_offset);
	float rounded_y = round(VERTEX.y / scale_offset);
	float rounded_z = round(VERTEX.z / scale_offset);

	vec3 rounded = vec3(rounded_x * scale_offset, rounded_y * scale_offset, rounded_z * scale_offset);

	VERTEX = rounded;
}

void fragment() {
	vec2 uv_adjusted = UV * ratio_adjustment;

	vec3 blend = mix(colour, texture(albedo, uv_adjusted).rgb, mix_amount);
	if (use_colour)
		ALBEDO = blend;
	else
		ALBEDO = texture(albedo, uv_adjusted).rgb;
}"

[resource]
render_priority = 0
shader = SubResource("Shader_qljma")
shader_parameter/ratio_adjustment = Vector2(1, 1)
shader_parameter/colour = Color(1, 0.64, 0.778, 1)
shader_parameter/use_colour = true
shader_parameter/mix_amount = 0.0
shader_parameter/scale_offset = 0.025
